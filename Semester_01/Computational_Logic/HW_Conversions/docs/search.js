window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"ui": {"fullname": "ui", "modulename": "ui", "kind": "module", "doc": "<p></p>\n"}, "ui.print_conversion": {"fullname": "ui.print_conversion", "modulename": "ui", "qualname": "print_conversion", "kind": "function", "doc": "<p>Prints the conversion menu</p>\n\n<ol>\n<li>Conversion using substitution method; b &lt; h</li>\n<li>Conversion using successive divisions method; b &gt; h</li>\n<li>Conversion using 10 as an intermediary base; b != 10, h != 10</li>\n<li>Rapid conversion between two bases p,q in{2, 4, 8, 16}</li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ui.print_operations": {"fullname": "ui.print_operations", "modulename": "ui", "qualname": "print_operations", "kind": "function", "doc": "<p>Prints the operations menu</p>\n\n<ol>\n<li>Addition of two numbers in base p</li>\n<li>Subtraction of two numbers in base p</li>\n<li>Multiplication of a number and a single digit in base p</li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ui.print_menu": {"fullname": "ui.print_menu", "modulename": "ui", "qualname": "print_menu", "kind": "function", "doc": "<p>Prints the main menu</p>\n\n<ol>\n<li>Conversion from base b to base h</li>\n<li>Operation with two numbers</li>\n<li>Test all functions</li>\n<li>Exit</li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ui.main": {"fullname": "ui.main", "modulename": "ui", "qualname": "main", "kind": "function", "doc": "<p>Main function of the program</p>\n\n<p>Prints the main menu and reads the option from the keyboard</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lib": {"fullname": "lib", "modulename": "lib", "kind": "module", "doc": "<p>Lib contains all helper functions for the program, including\n<code>add_in_base_p</code>, <code>subtract_in_base_p</code>, <code>multiply_in_base_p</code>, <code>divide_in_base_p</code>,\nfor operations in base <code>p</code>, and\n<code>convert_number_with_substitution_method</code>, <code>convert_a_number_with_successive_divisions</code>,\n<code>convert_a_number_using_10_as_intermediary_base</code>, and <code>rapid_conversion</code> for conversions between bases.</p>\n"}, "lib.check_if_valid_base": {"fullname": "lib.check_if_valid_base", "modulename": "lib", "qualname": "check_if_valid_base", "kind": "function", "doc": "<p>Checks if a given base is valid.\nA base is valid if it is an integer within the set {2,3,4,5,6,7,8,9,10,16}.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base</strong>:  The base to be checked.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the base is valid, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "lib.get_digit_mappings": {"fullname": "lib.get_digit_mappings", "modulename": "lib", "qualname": "get_digit_mappings", "kind": "function", "doc": "<p>Generates two dictionaries for digit-to-value and value-to-digit mappings based on the given base.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base</strong>:  The base for which the mappings are to be created.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing two dictionaries, one for digit-to-value and another for value-to-digit mappings.</p>\n</blockquote>\n\n<p>The digit-to-value dictionary maps a digit to its decimal equivalent.\nThe value-to-digit dictionary maps a decimal value to its digit equivalent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> (&lt;class &#x27;dict&#x27;&gt;, &lt;class &#x27;dict&#x27;&gt;):</span></span>", "funcdef": "def"}, "lib.add_in_base_p": {"fullname": "lib.add_in_base_p", "modulename": "lib", "qualname": "add_in_base_p", "kind": "function", "doc": "<p>Adds two numbers represented as strings in a given base p.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>number1</strong>:  The first number as a string.</li>\n<li><strong>number2</strong>:  The second number as a string.</li>\n<li><strong>base</strong>:  The base in which the numbers are represented, and the result should be.\nMust be an integer within the set {2,3,4,5,6,7,8,9,10,16}.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The result of the addition as a string in the same base.</p>\n</blockquote>\n\n<p>The function performs the addition by converting each digit to its decimal equivalent,\nadding them with carry, and then converting back to the base <code>p</code> representation.</p>\n\n<p>Pseudocode:</p>\n\n<ol>\n<li>Make both numbers the same length by adding leading zeros to the shorter one.</li>\n<li>Start iterations from the rightmost digit.</li>\n<li>Convert the current digit to decimal.</li>\n<li>Add the digits and account for carry.</li>\n<li>Save the result.</li>\n</ol>\n\n<p>if check_if_valid_base(base) is False:\n    stop the program and raise an error</p>\n\n<p>result &lt;- \"\"\ncarry &lt;- 0</p>\n\n<p>for i &lt;- max_length - 1 to 0:\n    digit1 &lt;- convert number1[i] to decimal\n    digit2 &lt;- convert number2[i] to decimal</p>\n\n<pre><code>total &lt;- digit1 + digit2 + carry\ncarry &lt;- total // base\nresult_digit &lt;- total % base\n\nresult &lt;- convert result_digit to base p + result\n</code></pre>\n\n<p>if carry &gt; 0:\n    result &lt;- convert carry to base p + result</p>\n\n<p>return result</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">number2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lib.subtract_in_base_p": {"fullname": "lib.subtract_in_base_p", "modulename": "lib", "qualname": "subtract_in_base_p", "kind": "function", "doc": "<p>Subtracts two numbers represented as strings in a given base p.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>number1</strong>:  The first number as a string, representing the minuend.</li>\n<li><strong>number2</strong>:  The second number as a string, representing the subtrahend.</li>\n<li><strong>base</strong>:  The base in which the numbers are represented, and the result should be.\nMust be an integer within the set {2,3,4,5,6,7,8,9,10,16}.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The result of the subtraction as a string in the same base.</p>\n</blockquote>\n\n<p>The function performs the subtraction by converting each digit to its decimal equivalent,\nsubtracting them with borrow, and then converting back to the base <code>p</code> representation.</p>\n\n<p>Pseudocode:</p>\n\n<ol>\n<li>Make both numbers the same length by adding leading zeros to the shorter one.</li>\n<li>Check if the result will be negative.</li>\n<li>Start iterations from the rightmost digit.</li>\n<li>Convert the current digit to decimal.</li>\n<li>Subtract the digits and account for borrow.</li>\n<li>Save the result.</li>\n</ol>\n\n<p>if check_if_valid_base(base) is False:\n    stop the program and raise an error</p>\n\n<p>result &lt;- \"\"\nborrow &lt;- 0</p>\n\n<p>for i &lt;- max_length - 1 to 0:\n    digit1 &lt;- convert number1[i] to decimal\n    digit2 &lt;- convert number2[i] to decimal</p>\n\n<pre><code>total &lt;- digit1 - digit2 - borrow\nif total &lt; 0:\n    total += base\n    borrow &lt;- 1\nelse:\n    borrow &lt;- 0\n\nresult_digit &lt;- total % base\n\nresult &lt;- convert result_digit to base p + result\n</code></pre>\n\n<p>return result</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">number2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lib.multiply_in_base_p": {"fullname": "lib.multiply_in_base_p", "modulename": "lib", "qualname": "multiply_in_base_p", "kind": "function", "doc": "<p>Multiplies a number by a single-digit number, which may be negative, both represented as strings in a given base p.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>number1</strong>:  The first number as a string, representing the multiplicand.</li>\n<li><strong>number2</strong>:  The second number as a string, representing the single-digit multiplier, which may be negative.</li>\n<li><strong>base</strong>:  The base in which the numbers are represented, and the result should be.\nMust be an integer within the set {2,3,4,5,6,7,8,9,10,16}.</li>\n<li><strong>intermediary</strong>:  A flag indicating if the function is used as an intermediary step in another conversion.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The result of the multiplication as a string in the same base.</p>\n</blockquote>\n\n<p>The function performs the multiplication by converting each digit to its decimal equivalent,\nmultiplying them with carry, and then converting back to the base <code>p</code> representation.</p>\n\n<p>Pseudocode:</p>\n\n<ol>\n<li>Check if the multiplier is negative and adjust accordingly.</li>\n<li>Convert the single-digit multiplier to its decimal equivalent.</li>\n<li>Start iterations from the rightmost digit.</li>\n<li>Convert the current digit to decimal.</li>\n<li>Multiply the current digit by the multiplier and add the carry.</li>\n<li>Save the result.</li>\n</ol>\n\n<p>if check_if_valid_base(base) is False:\n    stop the program and raise an error</p>\n\n<p>if number2 is negative:\n    number2 &lt;- number2 without the minus sign\n    negative_multiplier &lt;- True\nelse:\n    negative_multiplier &lt;- False</p>\n\n<p>result &lt;- \"\"\ncarry &lt;- 0</p>\n\n<p>for i &lt;- max_length - 1 to 0:\n    digit1 &lt;- convert number1[i] to decimal</p>\n\n<pre><code>total &lt;- digit1 * multiplier + carry\ncarry &lt;- total // base\nresult_digit &lt;- total % base\n\nresult &lt;- convert result_digit to base p + result\n</code></pre>\n\n<p>if carry &gt; 0:\n    result &lt;- convert carry to base p + result</p>\n\n<p>if negative_multiplier:\n    result &lt;- \"-\" + result</p>\n\n<p>return result</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">number2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">intermediary</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lib.divide_in_base_p": {"fullname": "lib.divide_in_base_p", "modulename": "lib", "qualname": "divide_in_base_p", "kind": "function", "doc": "<p>Divides a number by a single-digit number, both represented as strings in a given base p, and also returns the remainder.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>number1</strong>:  The first number as a string, representing the dividend.</li>\n<li><strong>number2</strong>:  The second number as a string, representing the single-digit divisor.</li>\n<li><strong>base</strong>:  The base in which the numbers are represented, and the result should be.\nMust be an integer within the set {2,3,4,5,6,7,8,9,10,16}.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing the result of the division as a string and the remainder as a string in the same base.</p>\n</blockquote>\n\n<p>The function performs the division by converting each digit to its decimal equivalent,\ndividing them with remainder, and then converting back to the base <code>p</code> representation.</p>\n\n<p>Pseudocode:</p>\n\n<ol>\n<li>Check if the divisor is negative and adjust accordingly.</li>\n<li>Convert the single-digit divisor to its decimal equivalent.</li>\n<li>Start iterations from the leftmost digit.</li>\n<li>Bring down the next digit.</li>\n<li>Convert the current digit to decimal.</li>\n<li>Divide the current digit by the divisor and save the remainder.</li>\n</ol>\n\n<p>if check_if_valid_base(base) is False:\n    stop the program and raise an error</p>\n\n<p>if number2 is negative:\n    number2 &lt;- number2 without the minus sign\n    negative_divisor &lt;- True\nelse:\n    negative_divisor &lt;- False</p>\n\n<p>result &lt;- \"\"\nremainder &lt;- 0</p>\n\n<p>for i &lt;- 0 to max_length - 1:\n    current &lt;- remainder * base + convert number1[i] to decimal\n    result_digit &lt;- current // divisor\n    remainder &lt;- current % divisor</p>\n\n<pre><code>result &lt;- convert result_digit to base p + result\n</code></pre>\n\n<p>result &lt;- remove leading zeros from result</p>\n\n<p>if negative_divisor:\n    result &lt;- \"-\" + result</p>\n\n<p>remainder_str &lt;- convert remainder to base p</p>\n\n<p>return result, remainder_str</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">number1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">number2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">intermediary</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> (&lt;class &#x27;str&#x27;&gt;, &lt;class &#x27;str&#x27;&gt;):</span></span>", "funcdef": "def"}, "lib.convert_number_with_substitution_method": {"fullname": "lib.convert_number_with_substitution_method", "modulename": "lib", "qualname": "convert_number_with_substitution_method", "kind": "function", "doc": "<p>Converts a number from base b to base h using substitution method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>number</strong>:  The number to be converted as a string.</li>\n<li><strong>b</strong>:  The base of the number.</li>\n<li><strong>h</strong>:  The base to convert to.</li>\n<li><strong>intermediary</strong>:  A flag indicating if the function is used as an intermediary step in another conversion.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The converted number as a string.</p>\n</blockquote>\n\n<p>The function performs the conversion by converting each digit to its base h equivalent.\nThen performs all calculations in the destination (h) base.</p>\n\n<p>Pseudocode:</p>\n\n<ol>\n<li>Check if the bases are valid.</li>\n<li>Convert the number to its representation in base h.</li>\n<li>Start iterations from the rightmost digit.</li>\n<li>Multiply the current digit by b^i in base h.</li>\n<li>Add the term to the result.</li>\n</ol>\n\n<p>if check_if_valid_base(b) is False or check_if_valid_base(h) is False:\n    stop the program and raise an error</p>\n\n<p>result &lt;- \"0\"\nmultiplier &lt;- \"1\"  # This will be b^i in base h, starting with i=0</p>\n\n<p>for i &lt;- 0 to max_length - 1:\n    digit &lt;- convert number[i] to decimal\n    term &lt;- multiply_in_base_p(multiplier, digit, h)\n    result &lt;- add_in_base_p(result, term, h)</p>\n\n<pre><code>multiplier &lt;- multiply_in_base_p(multiplier, b, h)\n</code></pre>\n\n<p>result &lt;- remove leading zeros from result</p>\n\n<p>if result is empty:\n    result &lt;- \"0\"</p>\n\n<p>return result</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">h</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">intermediary</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lib.convert_a_number_with_successive_divisions": {"fullname": "lib.convert_a_number_with_successive_divisions", "modulename": "lib", "qualname": "convert_a_number_with_successive_divisions", "kind": "function", "doc": "<p>Converts a number from base b to base h using successive divisions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>number</strong>:  The number to be converted as a string.</li>\n<li><strong>b</strong>:  The base of the number.</li>\n<li><strong>h</strong>:  The base to convert to.</li>\n<li><strong>intermediary</strong>:  A flag indicating if the function is used as an intermediary step in another conversion.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The converted number as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">h</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">intermediary</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lib.convert_a_number_using_10_as_intermediary_base": {"fullname": "lib.convert_a_number_using_10_as_intermediary_base", "modulename": "lib", "qualname": "convert_a_number_using_10_as_intermediary_base", "kind": "function", "doc": "<p>Converts a number from base b to base h using 10 as an intermediary base.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>number</strong>:  The number to be converted as a string.</li>\n<li><strong>b</strong>:  The base of the number.</li>\n<li><strong>h</strong>:  The base to convert to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The converted number as a string.</p>\n</blockquote>\n\n<p>The function performs the conversion by converting the number to base 10 first,\nthen converting the result to the destination base.</p>\n\n<p>Pseudocode:</p>\n\n<ol>\n<li>Check if the bases are valid.</li>\n<li>Determine which conversion to perform based on the arguments provided.</li>\n<li>Perform the conversion. If the destination base is 16, convert to base 10 first using substitution method, then convert to base 16.\nOtherwise, convert to base 10 first using successive divisions, then convert to the destination base.</li>\n<li>Return the result.</li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">h</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lib.rapid_conversion": {"fullname": "lib.rapid_conversion", "modulename": "lib", "qualname": "rapid_conversion", "kind": "function", "doc": "<p>Converts a number from base b to base h using 10 as an intermediary base.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>number</strong>:  The number to be converted as a string.</p></li>\n<li><p><strong>b</strong>:  the source base if converting to binary (destination base is assumed to be binary).</p></li>\n<li><strong>h</strong>:  the destination base if converting from binary (source base is assumed to be binary).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The converted number as a string.</p>\n</blockquote>\n\n<p>The function performs the conversion by using a lookup table for the source and destination bases.</p>\n\n<p>Pseudocode:</p>\n\n<ol>\n<li>Check if the bases are valid.</li>\n<li>Determine which conversion to perform based on the arguments provided.</li>\n<li>Perform the conversion by either converting from binary or to binary, using the lookup table.</li>\n<li>Return the result.</li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number</span>, </span><span class=\"param\"><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">h</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lib.read_integer_from_keyboard": {"fullname": "lib.read_integer_from_keyboard", "modulename": "lib", "qualname": "read_integer_from_keyboard", "kind": "function", "doc": "<p>Reads an integer from the keyboard.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt</strong>:  The prompt to be displayed to the user.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The integer read from the keyboard.</p>\n</blockquote>\n\n<p>If the input is not a valid integer, the function will display an error message and ask for input again.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "lib.read_string_from_keyboard": {"fullname": "lib.read_string_from_keyboard", "modulename": "lib", "qualname": "read_string_from_keyboard", "kind": "function", "doc": "<p>Reads a string from the keyboard.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt</strong>:  The prompt to be displayed to the user.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The string read from the keyboard.</p>\n</blockquote>\n\n<p>If the input is not a valid string, the function will display an error message and ask for input again.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "lib.test_all_functions": {"fullname": "lib.test_all_functions", "modulename": "lib", "qualname": "test_all_functions", "kind": "function", "doc": "<p>Tests all functions in the program.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "main": {"fullname": "main", "modulename": "main", "kind": "module", "doc": "<p></p>\n"}, "main.main": {"fullname": "main.main", "modulename": "main", "qualname": "main", "kind": "function", "doc": "<p>Main function of the program</p>\n\n<p>Problem statement:</p>\n\n<p>Optional homework \u2013 implementation operations + conversions</p>\n\n<p>Implements:</p>\n\n<ul>\n<li>arithmetic operations for positive integers: addition, subtraction, multiplication and division by one digit, in a base p in {2,3,...,9,10,16}</li>\n</ul>\n\n<ul>\n<li>conversions of natural numbers between two bases p,q in {2,3,...,9,10,16} using the substitution method or successive divisions and rapid conversions between two bases p,q in{2, 4, 8, 16}.</li>\n</ul>\n\n<p>and must have a menu such that all operations and conversion methods to be verified separately.</p>\n\n<p>The executable form, the code of the application and the documentation will be submitted in the corresponding assignment on Teams. The documentation will follow the same structure as the Programming Fundament\u2019s documentations, and it must contain at least: the problem statement for the implemented application, the used algorithms in pseudo-code, implementation considerations and test data.</p>\n\n<p>The grade is computed as follows:</p>\n\n<p>10%: by default</p>\n\n<p>70% : the application (the authors name will be found in code and will be visible at run time too)</p>\n\n<p>1p - algorithm for the method of successive divisions</p>\n\n<p>1p - algorithm for the substitution method</p>\n\n<p>1p \u2013 algorithm for conversion using 10 as an intermediate base</p>\n\n<p>2p - rapid conversions (executable form) between two bases p,q\u00ce{2, 4, 8, 16}.</p>\n\n<p>1p addition of two numbers in a base</p>\n\n<p>1p subtraction of two numbers in a base</p>\n\n<p>1p multiplication of a number by a digit in a base</p>\n\n<p>1p division of a number by a digit in a base</p>\n\n<p>1p code quality (indentation, use of comments, suggestive variables names)</p>\n\n<p>20%: documentation</p>\n\n<p>1p problem statement</p>\n\n<p>1p sub-algorithm\u2019s diagram</p>\n\n<p>1p used data type specification</p>\n\n<p>3p specification and pseudo-code for the important algorithms used (input, output, preconditions, post-conditions -1p; pseudo-code 2p)</p>\n\n<p>3p at least a set of test data for the complete application, more data sets where is needed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"ui": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ui.print_conversion": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 57}, "ui.print_operations": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 41}, "ui.print_menu": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 33}, "ui.main": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 20}, "lib": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 78}, "lib.check_if_valid_base": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 68}, "lib.get_digit_mappings": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 98}, "lib.add_in_base_p": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 290}, "lib.subtract_in_base_p": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 298}, "lib.multiply_in_base_p": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 369}, "lib.divide_in_base_p": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 359}, "lib.convert_number_with_substitution_method": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 296}, "lib.convert_a_number_with_successive_divisions": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 95}, "lib.convert_a_number_using_10_as_intermediary_base": {"qualname": 8, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 176}, "lib.rapid_conversion": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 171}, "lib.read_integer_from_keyboard": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 69}, "lib.read_string_from_keyboard": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 69}, "lib.test_all_functions": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 9}, "main": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "main.main": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 377}}, "length": 21, "save": true}, "index": {"qualname": {"root": {"1": {"0": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "p": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1}, "ui.print_menu": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ui.print_operations": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"ui.print_menu": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ui.main": {"tf": 1}, "main.main": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lib.multiply_in_base_p": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}, "n": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 6}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {"lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "d": {"docs": {"lib.add_in_base_p": {"tf": 1}}, "df": 1}}, "s": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {"lib.test_all_functions": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lib.subtract_in_base_p": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.read_string_from_keyboard": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"lib.rapid_conversion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lib.test_all_functions": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lib.test_all_functions": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"1": {"0": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {"ui": {"tf": 1}, "ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1}, "ui.print_menu": {"tf": 1}, "ui.main": {"tf": 1}}, "df": 5}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1}, "ui.print_menu": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ui.print_operations": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"ui.print_menu": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ui.main": {"tf": 1}, "main": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 3}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lib.multiply_in_base_p": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"lib": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "lib.test_all_functions": {"tf": 1}}, "df": 14}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}, "n": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 6}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {"lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "d": {"docs": {"lib.add_in_base_p": {"tf": 1}}, "df": 1}}, "s": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {"lib.test_all_functions": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lib.subtract_in_base_p": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.read_string_from_keyboard": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"lib.rapid_conversion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lib.test_all_functions": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lib.test_all_functions": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"docs": {"ui.print_conversion": {"tf": 2.6457513110645907}, "ui.print_operations": {"tf": 2.6457513110645907}, "ui.print_menu": {"tf": 2.6457513110645907}, "ui.main": {"tf": 2.6457513110645907}, "lib.check_if_valid_base": {"tf": 4}, "lib.get_digit_mappings": {"tf": 3.872983346207417}, "lib.add_in_base_p": {"tf": 5.656854249492381}, "lib.subtract_in_base_p": {"tf": 5.656854249492381}, "lib.multiply_in_base_p": {"tf": 6.782329983125268}, "lib.divide_in_base_p": {"tf": 7}, "lib.convert_number_with_substitution_method": {"tf": 6.782329983125268}, "lib.convert_a_number_with_successive_divisions": {"tf": 6.782329983125268}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 5.656854249492381}, "lib.rapid_conversion": {"tf": 5.291502622129181}, "lib.read_integer_from_keyboard": {"tf": 4}, "lib.read_string_from_keyboard": {"tf": 4}, "lib.test_all_functions": {"tf": 3}, "main.main": {"tf": 2.6457513110645907}}, "df": 18, "b": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}}, "df": 2}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "x": {"2": {"7": {"docs": {"lib.get_digit_mappings": {"tf": 2}, "lib.divide_in_base_p": {"tf": 2}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}, "2": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}, "docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lib.rapid_conversion": {"tf": 1.4142135623730951}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "lib.test_all_functions": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"lib.add_in_base_p": {"tf": 1.7320508075688772}, "lib.subtract_in_base_p": {"tf": 1.7320508075688772}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}, "lib.divide_in_base_p": {"tf": 2}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 10}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0}}, "doc": {"root": {"0": {"docs": {"lib.add_in_base_p": {"tf": 1.7320508075688772}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 2}}, "df": 5}, "1": {"0": {"docs": {"ui.print_conversion": {"tf": 1.7320508075688772}, "lib": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 2}, "lib.rapid_conversion": {"tf": 1}, "main.main": {"tf": 2}}, "df": 10}, "6": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "main.main": {"tf": 2}}, "df": 8}, "docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}}, "df": 5, "p": {"docs": {"main.main": {"tf": 3.4641016151377544}}, "df": 1}}, "2": {"0": {"docs": {"main.main": {"tf": 1}}, "df": 1}, "docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 6, "p": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}}, "3": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 6, "p": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}}, "4": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 7}, "5": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 5}, "6": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 5}, "7": {"0": {"docs": {"main.main": {"tf": 1}}, "df": 1}, "docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 5}, "8": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 7}, "9": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {"ui": {"tf": 1.7320508075688772}, "ui.print_conversion": {"tf": 4}, "ui.print_operations": {"tf": 3.4641016151377544}, "ui.print_menu": {"tf": 3.7416573867739413}, "ui.main": {"tf": 2}, "lib": {"tf": 4.58257569495584}, "lib.check_if_valid_base": {"tf": 4.795831523312719}, "lib.get_digit_mappings": {"tf": 5.0990195135927845}, "lib.add_in_base_p": {"tf": 8.94427190999916}, "lib.subtract_in_base_p": {"tf": 8.831760866327848}, "lib.multiply_in_base_p": {"tf": 9.643650760992955}, "lib.divide_in_base_p": {"tf": 9.433981132056603}, "lib.convert_number_with_substitution_method": {"tf": 9.055385138137417}, "lib.convert_a_number_with_successive_divisions": {"tf": 6.164414002968976}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 7.3484692283495345}, "lib.rapid_conversion": {"tf": 7.615773105863909}, "lib.read_integer_from_keyboard": {"tf": 5.0990195135927845}, "lib.read_string_from_keyboard": {"tf": 5.0990195135927845}, "lib.test_all_functions": {"tf": 1.7320508075688772}, "main": {"tf": 1.7320508075688772}, "main.main": {"tf": 8.426149773176359}}, "df": 21, "p": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1.7320508075688772}, "lib": {"tf": 2.23606797749979}, "lib.add_in_base_p": {"tf": 2}, "lib.subtract_in_base_p": {"tf": 1.7320508075688772}, "lib.multiply_in_base_p": {"tf": 2}, "lib.divide_in_base_p": {"tf": 2}, "lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}, "main.main": {"tf": 2}}, "df": 9, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1}, "ui.print_menu": {"tf": 1}, "ui.main": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"ui.main": {"tf": 1}, "lib": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.test_all_functions": {"tf": 1}, "main.main": {"tf": 1}}, "df": 9, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1.4142135623730951}, "lib.read_string_from_keyboard": {"tf": 1.4142135623730951}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"main.main": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 12}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"main.main": {"tf": 1.7320508075688772}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 7}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1}, "ui.print_menu": {"tf": 1}, "ui.main": {"tf": 2}, "lib": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1.7320508075688772}, "lib.get_digit_mappings": {"tf": 2.23606797749979}, "lib.add_in_base_p": {"tf": 4.358898943540674}, "lib.subtract_in_base_p": {"tf": 4.69041575982343}, "lib.multiply_in_base_p": {"tf": 5}, "lib.divide_in_base_p": {"tf": 5.0990195135927845}, "lib.convert_number_with_substitution_method": {"tf": 4}, "lib.convert_a_number_with_successive_divisions": {"tf": 2.449489742783178}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 4}, "lib.rapid_conversion": {"tf": 3.4641016151377544}, "lib.read_integer_from_keyboard": {"tf": 2.6457513110645907}, "lib.read_string_from_keyboard": {"tf": 2.6457513110645907}, "lib.test_all_functions": {"tf": 1}, "main.main": {"tf": 4.47213595499958}}, "df": 19, "m": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}, "n": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.7320508075688772}}, "df": 6}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1.4142135623730951}, "ui.print_menu": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "main.main": {"tf": 2.23606797749979}}, "df": 7}}, "o": {"docs": {"ui.print_menu": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 3}, "lib.add_in_base_p": {"tf": 3}, "lib.subtract_in_base_p": {"tf": 2.8284271247461903}, "lib.multiply_in_base_p": {"tf": 2.8284271247461903}, "lib.divide_in_base_p": {"tf": 2.8284271247461903}, "lib.convert_number_with_substitution_method": {"tf": 3}, "lib.convert_a_number_with_successive_divisions": {"tf": 2}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 3.3166247903554}, "lib.rapid_conversion": {"tf": 2.6457513110645907}, "lib.read_integer_from_keyboard": {"tf": 1.4142135623730951}, "lib.read_string_from_keyboard": {"tf": 1.4142135623730951}, "main.main": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lib.add_in_base_p": {"tf": 1.7320508075688772}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}}, "df": 3}}}, "o": {"docs": {"main.main": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ui.print_menu": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"lib.test_all_functions": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lib.rapid_conversion": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_conversion": {"tf": 2.23606797749979}, "ui.print_menu": {"tf": 1}, "lib": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.7320508075688772}, "lib.rapid_conversion": {"tf": 1.7320508075688772}, "main.main": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"lib": {"tf": 1}, "main.main": {"tf": 2}}, "df": 2}}}}}, "t": {"docs": {"lib": {"tf": 1.7320508075688772}, "lib.add_in_base_p": {"tf": 2.23606797749979}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 2.23606797749979}, "lib.divide_in_base_p": {"tf": 2.23606797749979}, "lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 2.23606797749979}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1.7320508075688772}}, "df": 7}}}, "s": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"main.main": {"tf": 1}}, "df": 1, "s": {"docs": {"lib": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 2.449489742783178}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 7, "s": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"lib.check_if_valid_base": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lib.add_in_base_p": {"tf": 2.6457513110645907}, "lib.multiply_in_base_p": {"tf": 2.6457513110645907}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 2.23606797749979}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1}, "ui.print_menu": {"tf": 1}, "ui.main": {"tf": 1}, "main.main": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"ui.print_conversion": {"tf": 1.4142135623730951}, "lib": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "main.main": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_operations": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "main.main": {"tf": 1.4142135623730951}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"lib.multiply_in_base_p": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"lib.multiply_in_base_p": {"tf": 1}}, "df": 1}, "r": {"docs": {"lib.multiply_in_base_p": {"tf": 2.8284271247461903}, "lib.convert_number_with_substitution_method": {"tf": 2}}, "df": 2}}}, "y": {"docs": {"lib": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.multiply_in_base_p": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_menu": {"tf": 1}, "ui.main": {"tf": 1.4142135623730951}, "main.main": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}}, "df": 2}}, "x": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}, "y": {"docs": {"lib.multiply_in_base_p": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lib.subtract_in_base_p": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ui.print_conversion": {"tf": 1.7320508075688772}, "lib": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.7320508075688772}, "lib.rapid_conversion": {"tf": 1.7320508075688772}, "main.main": {"tf": 1.4142135623730951}}, "df": 7}}}, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1, "d": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "main.main": {"tf": 1.7320508075688772}}, "df": 4}, "r": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"main.main": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lib": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_operations": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "main.main": {"tf": 1.4142135623730951}}, "df": 3}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.subtract_in_base_p": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"lib.subtract_in_base_p": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lib.subtract_in_base_p": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "h": {"docs": {"main.main": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ui.print_operations": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}, "lib.divide_in_base_p": {"tf": 1.7320508075688772}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1}}, "df": 6, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"lib.divide_in_base_p": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.add_in_base_p": {"tf": 1.7320508075688772}, "lib.subtract_in_base_p": {"tf": 1.7320508075688772}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}, "lib.divide_in_base_p": {"tf": 2}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1.4142135623730951}, "lib.read_string_from_keyboard": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"main.main": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lib.rapid_conversion": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "b": {"docs": {"ui.print_conversion": {"tf": 1.7320508075688772}, "ui.print_menu": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 2}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1.4142135623730951}}, "df": 6, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ui.print_conversion": {"tf": 1}, "ui.print_operations": {"tf": 1.7320508075688772}, "ui.print_menu": {"tf": 1.4142135623730951}, "lib": {"tf": 2.449489742783178}, "lib.check_if_valid_base": {"tf": 2.23606797749979}, "lib.get_digit_mappings": {"tf": 1.7320508075688772}, "lib.add_in_base_p": {"tf": 3.3166247903554}, "lib.subtract_in_base_p": {"tf": 3.1622776601683795}, "lib.multiply_in_base_p": {"tf": 3.3166247903554}, "lib.divide_in_base_p": {"tf": 3.1622776601683795}, "lib.convert_number_with_substitution_method": {"tf": 3.7416573867739413}, "lib.convert_a_number_with_successive_divisions": {"tf": 2}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 3.4641016151377544}, "lib.rapid_conversion": {"tf": 2.6457513110645907}, "main.main": {"tf": 2.449489742783178}}, "df": 15, "s": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1.4142135623730951}, "main.main": {"tf": 1.7320508075688772}}, "df": 6}, "d": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.7320508075688772}, "lib.multiply_in_base_p": {"tf": 2}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1.7320508075688772}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "main.main": {"tf": 2}}, "df": 13, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "main.main": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "y": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}, "lib.divide_in_base_p": {"tf": 1.7320508075688772}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1.4142135623730951}, "main.main": {"tf": 2}}, "df": 8}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"lib.subtract_in_base_p": {"tf": 2.449489742783178}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}}}, "^": {"docs": {}, "df": 0, "i": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lib.rapid_conversion": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.add_in_base_p": {"tf": 3.1622776601683795}, "lib.subtract_in_base_p": {"tf": 3.3166247903554}, "lib.multiply_in_base_p": {"tf": 3.605551275463989}, "lib.divide_in_base_p": {"tf": 3.605551275463989}, "lib.convert_number_with_substitution_method": {"tf": 3}}, "df": 6}, "i": {"docs": {}, "df": 0, "b": {"docs": {"lib": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"lib.rapid_conversion": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {"ui.print_conversion": {"tf": 1.7320508075688772}, "ui.print_menu": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 3.3166247903554}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lib.divide_in_base_p": {"tf": 1.4142135623730951}, "main.main": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"lib.divide_in_base_p": {"tf": 3}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"lib": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2, "s": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"1": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}}, "df": 3}, "2": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"ui.print_operations": {"tf": 1}, "lib.get_digit_mappings": {"tf": 2.8284271247461903}, "lib.add_in_base_p": {"tf": 2.23606797749979}, "lib.subtract_in_base_p": {"tf": 2.23606797749979}, "lib.multiply_in_base_p": {"tf": 3}, "lib.divide_in_base_p": {"tf": 3.1622776601683795}, "lib.convert_number_with_substitution_method": {"tf": 2.23606797749979}, "main.main": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.add_in_base_p": {"tf": 2}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 2}, "lib.divide_in_base_p": {"tf": 2}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.7320508075688772}, "lib.rapid_conversion": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"main.main": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"main.main": {"tf": 2}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"ui.print_operations": {"tf": 1.4142135623730951}, "lib": {"tf": 1.4142135623730951}, "lib.check_if_valid_base": {"tf": 1.4142135623730951}, "lib.get_digit_mappings": {"tf": 1.7320508075688772}, "lib.add_in_base_p": {"tf": 2}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 2.6457513110645907}, "lib.divide_in_base_p": {"tf": 2.8284271247461903}, "lib.convert_number_with_substitution_method": {"tf": 2}, "lib.convert_a_number_with_successive_divisions": {"tf": 2}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.7320508075688772}, "lib.rapid_conversion": {"tf": 2}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1.4142135623730951}, "main.main": {"tf": 3.3166247903554}}, "df": 15, "s": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "lib.add_in_base_p": {"tf": 2}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 2.23606797749979}, "lib.divide_in_base_p": {"tf": 2.23606797749979}, "lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.7320508075688772}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.7320508075688772}, "lib.rapid_conversion": {"tf": 1.7320508075688772}, "main.main": {"tf": 1.7320508075688772}}, "df": 11, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lib.rapid_conversion": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}, "n": {"docs": {"ui.print_conversion": {"tf": 1}, "lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1.4142135623730951}, "lib.read_string_from_keyboard": {"tf": 1}, "main.main": {"tf": 1}}, "df": 13, "d": {"docs": {"ui.print_operations": {"tf": 1}, "ui.main": {"tf": 1}, "lib": {"tf": 1.4142135623730951}, "lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.add_in_base_p": {"tf": 2}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 2.23606797749979}, "lib.divide_in_base_p": {"tf": 2.6457513110645907}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "main.main": {"tf": 3}}, "df": 13}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"lib": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_operations": {"tf": 1}, "lib.add_in_base_p": {"tf": 1.4142135623730951}, "main.main": {"tf": 1.4142135623730951}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"lib.add_in_base_p": {"tf": 1}}, "df": 1}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"ui.print_menu": {"tf": 1}, "lib": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.test_all_functions": {"tf": 1}, "main.main": {"tf": 1}}, "df": 5}, "s": {"docs": {}, "df": 0, "o": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"main.main": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 8}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2}}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"main.main": {"tf": 2}}, "df": 1}}}}}}}}}}, "t": {"docs": {"main.main": {"tf": 1.7320508075688772}}, "df": 1}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}}, "df": 5, "n": {"docs": {"ui.print_operations": {"tf": 1.7320508075688772}, "lib": {"tf": 2.23606797749979}, "lib.add_in_base_p": {"tf": 1.7320508075688772}, "lib.subtract_in_base_p": {"tf": 1.7320508075688772}, "lib.multiply_in_base_p": {"tf": 2}, "lib.divide_in_base_p": {"tf": 1.7320508075688772}, "lib.convert_number_with_substitution_method": {"tf": 2.8284271247461903}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.test_all_functions": {"tf": 1}, "main.main": {"tf": 3.1622776601683795}}, "df": 10, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1.4142135623730951}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}, "{": {"2": {"docs": {"ui.print_conversion": {"tf": 1}, "main.main": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1.4142135623730951}, "lib.read_string_from_keyboard": {"tf": 1.4142135623730951}, "main.main": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"lib.check_if_valid_base": {"tf": 1.7320508075688772}, "lib.add_in_base_p": {"tf": 1.7320508075688772}, "lib.subtract_in_base_p": {"tf": 2}, "lib.multiply_in_base_p": {"tf": 2.6457513110645907}, "lib.divide_in_base_p": {"tf": 2.23606797749979}, "lib.convert_number_with_substitution_method": {"tf": 2.449489742783178}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1.7320508075688772}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 11}, "s": {"docs": {"lib.check_if_valid_base": {"tf": 2}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 2}, "lib.divide_in_base_p": {"tf": 1.7320508075688772}, "lib.convert_number_with_substitution_method": {"tf": 2}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1.4142135623730951}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 12}, "t": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "main.main": {"tf": 1}}, "df": 2, "s": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}}, "df": 6}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ui.print_conversion": {"tf": 1}, "lib": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2, "s": {"docs": {"ui.main": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 7, "s": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 12}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"lib.add_in_base_p": {"tf": 3.3166247903554}, "lib.subtract_in_base_p": {"tf": 3.1622776601683795}, "lib.multiply_in_base_p": {"tf": 3.605551275463989}, "lib.divide_in_base_p": {"tf": 3.4641016151377544}, "lib.convert_number_with_substitution_method": {"tf": 3}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.4142135623730951}, "lib.rapid_conversion": {"tf": 1}}, "df": 7}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.divide_in_base_p": {"tf": 3.1622776601683795}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 4}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"ui.print_conversion": {"tf": 1}, "main.main": {"tf": 1.4142135623730951}}, "df": 2, "\u00ee": {"docs": {}, "df": 0, "{": {"2": {"docs": {"main.main": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.print_menu": {"tf": 1}}, "df": 1, "s": {"docs": {"ui.print_operations": {"tf": 1}, "lib": {"tf": 1}, "main.main": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.main": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"ui.print_operations": {"tf": 1.7320508075688772}, "ui.main": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "main.main": {"tf": 3.1622776601683795}}, "df": 10}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "main.main": {"tf": 1}}, "df": 4, "e": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "main.main": {"tf": 1}}, "df": 4}}, "r": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "main.main": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4, "[": {"docs": {}, "df": 0, "i": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 4}}}, "2": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 2}, "lib.divide_in_base_p": {"tf": 2}}, "df": 4, "[": {"docs": {}, "df": 0, "i": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}}, "df": 2}}}, "docs": {"ui.print_operations": {"tf": 1}, "lib": {"tf": 1.7320508075688772}, "lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 2}, "lib.divide_in_base_p": {"tf": 2}, "lib.convert_number_with_substitution_method": {"tf": 2.449489742783178}, "lib.convert_a_number_with_successive_divisions": {"tf": 2.23606797749979}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 2.449489742783178}, "lib.rapid_conversion": {"tf": 2}, "main.main": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"ui.print_operations": {"tf": 1.4142135623730951}, "ui.print_menu": {"tf": 1}, "lib.add_in_base_p": {"tf": 1.7320508075688772}, "lib.subtract_in_base_p": {"tf": 1.7320508075688772}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "main.main": {"tf": 1.7320508075688772}}, "df": 7}, "[": {"docs": {}, "df": 0, "i": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 2.6457513110645907}, "lib.divide_in_base_p": {"tf": 2.23606797749979}}, "df": 3}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"lib.divide_in_base_p": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"ui.print_menu": {"tf": 1}, "ui.main": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1.7320508075688772}, "lib.read_integer_from_keyboard": {"tf": 1.4142135623730951}, "lib.read_string_from_keyboard": {"tf": 1.4142135623730951}}, "df": 12}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ui.main": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "main.main": {"tf": 1}}, "df": 12, "s": {"docs": {"ui.print_menu": {"tf": 1}, "lib": {"tf": 1}, "lib.test_all_functions": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"lib": {"tf": 1.7320508075688772}, "lib.get_digit_mappings": {"tf": 2}, "lib.add_in_base_p": {"tf": 1.4142135623730951}, "lib.subtract_in_base_p": {"tf": 1.4142135623730951}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "main.main": {"tf": 2.6457513110645907}}, "df": 11, "m": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"main.main": {"tf": 1}}, "df": 1, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1.4142135623730951}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1.7320508075688772}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.convert_a_number_with_successive_divisions": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ui.print_menu": {"tf": 1}, "lib": {"tf": 1.4142135623730951}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {"lib.check_if_valid_base": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"lib.subtract_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}, "main.main": {"tf": 2}}, "df": 5}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"lib.get_digit_mappings": {"tf": 1}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.7320508075688772}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ui.print_menu": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lib.get_digit_mappings": {"tf": 1.4142135623730951}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1.4142135623730951}, "lib.divide_in_base_p": {"tf": 1.4142135623730951}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 6}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 7}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lib.rapid_conversion": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"ui.main": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1.4142135623730951}, "lib.read_string_from_keyboard": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"lib.check_if_valid_base": {"tf": 1.7320508075688772}, "lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.multiply_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1.7320508075688772}, "lib.convert_a_number_using_10_as_intermediary_base": {"tf": 1}, "lib.rapid_conversion": {"tf": 1}, "lib.read_integer_from_keyboard": {"tf": 1}, "lib.read_string_from_keyboard": {"tf": 1}}, "df": 10}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"lib.get_digit_mappings": {"tf": 2.6457513110645907}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"main.main": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"lib.add_in_base_p": {"tf": 1}, "lib.subtract_in_base_p": {"tf": 1}, "lib.divide_in_base_p": {"tf": 1}, "lib.convert_number_with_substitution_method": {"tf": 1}}, "df": 4}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();
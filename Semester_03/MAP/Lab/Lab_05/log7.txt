PrgState{
id=6,
 exeStack=[(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5)))))],
 symTable={},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=(the heap is empty)

}
PrgState{
id=6,
 exeStack=[Ref(Int) v, (NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))],
 symTable={},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=(the heap is empty)

}
PrgState{
id=6,
 exeStack=[Ref(Int) v, (NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))],
 symTable={},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=(the heap is empty)

}
PrgState{
id=6,
 exeStack=[(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))],
 symTable={v=RefValue(0, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=(the heap is empty)

}
PrgState{
id=6,
 exeStack=[(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))],
 symTable={v=RefValue(0, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=(the heap is empty)

}
PrgState{
id=6,
 exeStack=[NewStmt(v, 20), (print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5)))],
 symTable={v=RefValue(0, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=(the heap is empty)

}
PrgState{
id=6,
 exeStack=[NewStmt(v, 20), (print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5)))],
 symTable={v=RefValue(0, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=(the heap is empty)

}
PrgState{
id=6,
 exeStack=[(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5)))],
 symTable={v=RefValue(1, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5)))],
 symTable={v=RefValue(1, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[print(RefExp(v)), (WriteHeapStmt(v, 30);print(RefExp(v) + 5))],
 symTable={v=RefValue(1, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[print(RefExp(v)), (WriteHeapStmt(v, 30);print(RefExp(v) + 5))],
 symTable={v=RefValue(1, Int)},
 output=[],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[(WriteHeapStmt(v, 30);print(RefExp(v) + 5))],
 symTable={v=RefValue(1, Int)},
 output=[20],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[(WriteHeapStmt(v, 30);print(RefExp(v) + 5))],
 symTable={v=RefValue(1, Int)},
 output=[20],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[WriteHeapStmt(v, 30), print(RefExp(v) + 5)],
 symTable={v=RefValue(1, Int)},
 output=[20],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[WriteHeapStmt(v, 30), print(RefExp(v) + 5)],
 symTable={v=RefValue(1, Int)},
 output=[20],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 20

}
PrgState{
id=6,
 exeStack=[print(RefExp(v) + 5)],
 symTable={v=RefValue(1, Int)},
 output=[20],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 30

}
PrgState{
id=6,
 exeStack=[print(RefExp(v) + 5)],
 symTable={v=RefValue(1, Int)},
 output=[20],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 30

}
PrgState{
id=6,
 exeStack=[],
 symTable={v=RefValue(1, Int)},
 output=[20, 35],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 30

}
PrgState{
id=6,
 exeStack=[],
 symTable={v=RefValue(1, Int)},
 output=[20, 35],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 30

}
PrgState{
id=6,
 exeStack=[],
 symTable={v=RefValue(1, Int)},
 output=[20, 35],
 originalProgram=(Ref(Int) v;(NewStmt(v, 20);(print(RefExp(v));(WriteHeapStmt(v, 30);print(RefExp(v) + 5))))),
 fileTable={},
 heap=1 -> 30

}
